<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- container가 읽어 들여서 DispatcherServlet가 필요한 객체를 생성해주는 파일
		 여기서 만든 객체 -> DispatcherServlet가 사용
	 -->
	 
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- view resolver : 논리적인 뷰 정보 -> 물리적인(파일명, 폴더위치) 뷰 정보를 결정해줌
	 	 InternalResourceViewResolver : jsp를 view로 사용하는 resolver		,pdf나 xml 형식으로 내보는 녀석도 존재
	 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- DispatherServlet은 공용 컨트롤러만 여기에 두고
		 같이 쓰는 DAO, Service는 root-context에다가 해야함	
	 -->
	<context:component-scan base-package="com.mvc.controller" />
	
	<!-- <beans:import resource="db.xml"/> -->
	
</beans:beans>
